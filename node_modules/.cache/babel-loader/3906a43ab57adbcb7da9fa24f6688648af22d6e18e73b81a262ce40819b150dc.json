{"ast":null,"code":"export function handleReservationTimeRendering(reservationTime) {\n  if (reservationTime) {\n    const reservationTimeDate = new Date(reservationTime);\n    const reservationTimeDateToday = new Date();\n    const reservationTimeDateTomorrow = new Date();\n    reservationTimeDateTomorrow.setDate(reservationTimeDateTomorrow.getDate() + 1);\n    if (reservationTimeDate.getDate() === reservationTimeDateToday.getDate() && reservationTimeDate.getMonth() === reservationTimeDateToday.getMonth() && reservationTimeDate.getFullYear() === reservationTimeDateToday.getFullYear()) {\n      return `Today, ${reservationTimeDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    } else if (reservationTimeDate.getDate() === reservationTimeDateTomorrow.getDate() && reservationTimeDate.getMonth() === reservationTimeDateTomorrow.getMonth() && reservationTimeDate.getFullYear() === reservationTimeDateTomorrow.getFullYear()) {\n      return `Tomorrow, ${reservationTimeDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    } else {\n      return `${reservationTimeDate.toLocaleString('default', {\n        month: 'long'\n      })} ${reservationTimeDate.getDate()}, ${reservationTimeDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    }\n  }\n}\nexport function formatPhoneNumber(phoneNumber) {\n  const cleaned = ('' + phoneNumber).replace(/\\D/g, '');\n  if (cleaned.length === 7) {\n    return cleaned.slice(0, 3) + '-' + cleaned.slice(3, 7);\n  } else if (cleaned.length >= 4) {\n    const firstPart = cleaned.slice(0, 3);\n    const secondPart = cleaned.slice(3, 7);\n    return cleaned.length > 3 ? firstPart + '-' + secondPart + '-' + cleaned.slice(7) : firstPart + '-' + secondPart;\n  } else {\n    return phoneNumber;\n  }\n}","map":{"version":3,"names":["handleReservationTimeRendering","reservationTime","reservationTimeDate","Date","reservationTimeDateToday","reservationTimeDateTomorrow","setDate","getDate","getMonth","getFullYear","toLocaleTimeString","hour","minute","toLocaleString","month","formatPhoneNumber","phoneNumber","cleaned","replace","length","slice","firstPart","secondPart"],"sources":["D:/Coding/Yunaencos Inc/reservation-management/src/utils/functions.tsx"],"sourcesContent":["export function handleReservationTimeRendering(reservationTime: Date | null) {\r\n    if (reservationTime) {\r\n        const reservationTimeDate = new Date(reservationTime);\r\n        const reservationTimeDateToday = new Date();\r\n        const reservationTimeDateTomorrow = new Date();\r\n        reservationTimeDateTomorrow.setDate(reservationTimeDateTomorrow.getDate() + 1);\r\n        if (reservationTimeDate.getDate() === reservationTimeDateToday.getDate() && reservationTimeDate.getMonth() === reservationTimeDateToday.getMonth() && reservationTimeDate.getFullYear() === reservationTimeDateToday.getFullYear()) {\r\n            return `Today, ${reservationTimeDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\r\n        } else if (reservationTimeDate.getDate() === reservationTimeDateTomorrow.getDate() && reservationTimeDate.getMonth() === reservationTimeDateTomorrow.getMonth() && reservationTimeDate.getFullYear() === reservationTimeDateTomorrow.getFullYear()) {\r\n            return `Tomorrow, ${reservationTimeDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\r\n        } else {\r\n            return `${reservationTimeDate.toLocaleString('default', { month: 'long' })} ${reservationTimeDate.getDate()}, ${reservationTimeDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\r\n        }\r\n    }\r\n}\r\n\r\nexport function formatPhoneNumber(phoneNumber: number | null | undefined) {\r\n    const cleaned = ('' + phoneNumber).replace(/\\D/g, ''); \r\n\r\n    if (cleaned.length === 7) {\r\n        return cleaned.slice(0, 3) + '-' + cleaned.slice(3, 7);\r\n    } else if (cleaned.length >= 4) {\r\n        const firstPart = cleaned.slice(0, 3);\r\n        const secondPart = cleaned.slice(3, 7);\r\n        return cleaned.length > 3 ? firstPart + '-' + secondPart + '-' + cleaned.slice(7) : firstPart + '-' + secondPart;\r\n    } else {\r\n        return phoneNumber;\r\n    }\r\n}"],"mappings":"AAAA,OAAO,SAASA,8BAA8BA,CAACC,eAA4B,EAAE;EACzE,IAAIA,eAAe,EAAE;IACjB,MAAMC,mBAAmB,GAAG,IAAIC,IAAI,CAACF,eAAe,CAAC;IACrD,MAAMG,wBAAwB,GAAG,IAAID,IAAI,CAAC,CAAC;IAC3C,MAAME,2BAA2B,GAAG,IAAIF,IAAI,CAAC,CAAC;IAC9CE,2BAA2B,CAACC,OAAO,CAACD,2BAA2B,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9E,IAAIL,mBAAmB,CAACK,OAAO,CAAC,CAAC,KAAKH,wBAAwB,CAACG,OAAO,CAAC,CAAC,IAAIL,mBAAmB,CAACM,QAAQ,CAAC,CAAC,KAAKJ,wBAAwB,CAACI,QAAQ,CAAC,CAAC,IAAIN,mBAAmB,CAACO,WAAW,CAAC,CAAC,KAAKL,wBAAwB,CAACK,WAAW,CAAC,CAAC,EAAE;MAChO,OAAQ,UAASP,mBAAmB,CAACQ,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAE,EAAC;IACzG,CAAC,MAAM,IAAIV,mBAAmB,CAACK,OAAO,CAAC,CAAC,KAAKF,2BAA2B,CAACE,OAAO,CAAC,CAAC,IAAIL,mBAAmB,CAACM,QAAQ,CAAC,CAAC,KAAKH,2BAA2B,CAACG,QAAQ,CAAC,CAAC,IAAIN,mBAAmB,CAACO,WAAW,CAAC,CAAC,KAAKJ,2BAA2B,CAACI,WAAW,CAAC,CAAC,EAAE;MAChP,OAAQ,aAAYP,mBAAmB,CAACQ,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAE,EAAC;IAC5G,CAAC,MAAM;MACH,OAAQ,GAAEV,mBAAmB,CAACW,cAAc,CAAC,SAAS,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAC,CAAE,IAAGZ,mBAAmB,CAACK,OAAO,CAAC,CAAE,KAAIL,mBAAmB,CAACQ,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAE,EAAC;IACxM;EACJ;AACJ;AAEA,OAAO,SAASG,iBAAiBA,CAACC,WAAsC,EAAE;EACtE,MAAMC,OAAO,GAAG,CAAC,EAAE,GAAGD,WAAW,EAAEE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAErD,IAAID,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IACtB,OAAOF,OAAO,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGH,OAAO,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,CAAC,MAAM,IAAIH,OAAO,CAACE,MAAM,IAAI,CAAC,EAAE;IAC5B,MAAME,SAAS,GAAGJ,OAAO,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACrC,MAAME,UAAU,GAAGL,OAAO,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACtC,OAAOH,OAAO,CAACE,MAAM,GAAG,CAAC,GAAGE,SAAS,GAAG,GAAG,GAAGC,UAAU,GAAG,GAAG,GAAGL,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,GAAGC,SAAS,GAAG,GAAG,GAAGC,UAAU;EACpH,CAAC,MAAM;IACH,OAAON,WAAW;EACtB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}